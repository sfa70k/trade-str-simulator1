local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "Trade str simulator",
   Icon = 0, 
   LoadingTitle = "trade str simulator",
   LoadingSubtitle = "by 70k",
   ShowText = "Rayfield",
   Theme = "Default",

   ToggleUIKeybind = "K",

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false,

   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil,
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, 
      Invite = "noinvitelink", 
      RememberJoins = true 
   },

   KeySystem = false,
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key", 
      SaveKey = true, 
      GrabKeyFromSite = false, 
      Key = {"Hello"} 
   }
})
local Main = Window:CreateTab("Main", 4483362458)
local Other = Window:CreateTab("Other", 4483362458)
local Section = Main:CreateSection("Misc")

local Button = Other:CreateButton({
   Name = "Inf Yeild",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()

   end,
})

local Button = Main:CreateButton({
   Name = "Auto Punch ON",
   Callback = function()

        _G.autoCombat = true;
        while _G.autoCombat == true do

            local args = {
	game:GetService("Players"):WaitForChild("EvanJones1986yewzv")
}
game:GetService("Players").LocalPlayer:WaitForChild("Backpack"):WaitForChild("Combat"):WaitForChild("RemoteUse"):FireServer(unpack(args))

        wait(0.1)
         
        end

end,
})

local Button = Main:CreateButton({
   Name = "Auto Punch OFF",
   Callback = function()

           _G.autoCombat = false;
        while _G.autoCombat == true do

            local args = {
	game:GetService("Players"):WaitForChild("EvanJones1986yewzv")
}
game:GetService("Players").LocalPlayer:WaitForChild("Backpack"):WaitForChild("Combat"):WaitForChild("RemoteUse"):FireServer(unpack(args))

        wait(0.1)
         
        end

   end,
})

local Button = Main:CreateButton({
   Name = "AntiAfk ON",
   Callback = function()

_G.autoafk = true;
        while _G.autoafk == true do

       game:GetService("ReplicatedStorage"):WaitForChild("Remote"):WaitForChild("FromLocalForServer"):WaitForChild("Afk"):WaitForChild("wantActivity"):FireServer()

        wait(0.5)

end

   end,
})

local Button = Main:CreateButton({
   Name = "AntiAfk OFF",
   Callback = function()

_G.autoafk = false;
        while _G.autoafk == true do

       game:GetService("ReplicatedStorage"):WaitForChild("Remote"):WaitForChild("FromLocalForServer"):WaitForChild("Afk"):WaitForChild("wantActivity"):FireServer()

        wait(0.5)

end

   end,
})

local Button = Other:CreateButton({
   Name = "Loop Bring",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/sfa70k/trade-str-simulator1/refs/heads/main/setting"))()

   end,
})


local Button = Main:CreateButton({
   Name = "autochest6",
   Callback = function()

_G.autochest6 = false;
        while _G.autochest6 == true do

       game:GetService("ReplicatedStorage"):WaitForChild("Remote"):WaitForChild("FromServerForLocal"):WaitForChild("Box"):WaitForChild("Box6"):FireServer()

        wait(0.5)

end

   end,
})


local Button = Main:CreateButton({
   Name = "auto upgrade time on",
   Callback = function()

_G.autotime = true;
        while _G.autotime == true do

       local args = {
	true
}
game:GetService("ReplicatedStorage"):WaitForChild("Remote"):WaitForChild("FromLocalForServer"):WaitForChild("TimeUpgrade"):WaitForChild("TimeMul"):FireServer(unpack(args))


        wait(10)

end

   end,
})

local Button = Other:CreateButton({
   Name = "other gui for some autos",
   Callback = function()
   loadstring(game:HttpGet("https://gist.githubusercontent.com/uhhsay2/7529ba7011b1a023195bac49f31030a0/raw/strength.lua"))()

   end,
})

local Button = Other:CreateButton({
   Name = "OP trade str simulator script",
   Callback = function()
   loadstring(game:HttpGet("https://rawscripts.net/raw/(Code:-FreeSecret)-Trade-Strength-Simulator-Trade-Strength-Simulator-35978"))()

   end,
})

local Button = Main:CreateButton({
   Name = "delete all mobs expect bosses",
   Callback = function()

local Players = game:GetService("Players")
local workspace = workspace

local rawPaths = {
    "workspace.LeaderBoard.DiamondLeaderBoard.Dummy1",
    "workspace.LeaderBoard.RankLeaderBoard.Dummy1",
    "workspace.LeaderBoard.ASCLeaderBoard.Dummy1",
    "workspace.LeaderBoard.SACLeaderBoard.Dummy1",
    "workspace.LeaderBoard.STLeaderBoard.Dummy1",
    "workspace.LeaderBoard.WinLeaderBoard.Dummy1",
    "workspace.RespawnMobs.Basher.Basher",
    "workspace.RespawnMobs.Bob.Bob",
    "workspace.RespawnMobs.Green.Grn",
    "workspace.RespawnMobs.Kid.Kid",
    "workspace.RespawnMobs.Kira.Kira",
    "workspace.RespawnMobs.RobloxEgor.RobloxEgor",
    "workspace.RespawnMobs.TheGreen.TheGreen",
    "workspace.RespawnMobs.White.Whe",
}


local targets = {}
for _, p in ipairs(rawPaths) do
    targets[string.lower(p)] = true
end

local function findChildCaseInsensitive(parent, name)
    if not parent then return nil end
    local exact = parent:FindFirstChild(name)
    if exact then return exact end
    local lowerName = string.lower(name)
    for _, c in ipairs(parent:GetChildren()) do
        if string.lower(c.Name) == lowerName then
            return c
        end
    end
    return nil
end

local function findInstanceByDotPath(path)
    local parts = {}
    for part in string.gmatch(path, "[^.]+") do table.insert(parts, part) end
    if #parts == 0 then return nil end
    local firstLower = string.lower(parts[1])
    local cur
    if firstLower == "workspace" then
        cur = workspace
        table.remove(parts,1)
    elseif firstLower == "players" then
        cur = game:GetService("Players")
        table.remove(parts,1)
    elseif firstLower == "game" then
        cur = game
        table.remove(parts,1)
    else
        
        cur = workspace
    end
    for _, part in ipairs(parts) do
        cur = findChildCaseInsensitive(cur, part)
        if not cur then return nil end
    end
    return cur
end

local function tryDelete(path)
    local inst = findInstanceByDotPath(path)
    if inst then
        pcall(function() inst:Destroy() end)
        print("[local-delete] Deleted:", path)
        return true
    end
    return false
end


for _, p in ipairs(rawPaths) do
    tryDelete(p)
end


spawn(function()
    while true do
        for _, p in ipairs(rawPaths) do
            tryDelete(p)
        end
        wait(1.5)
    end
end)


workspace.DescendantAdded:Connect(function(inst)
    local full = inst:GetFullName()         
    local lower = string.lower(full)        
    if targets[lower] then
        pcall(function() inst:Destroy() end)
        print("[local-delete] Deleted on add:", full)
    end
end)

   end,
})
